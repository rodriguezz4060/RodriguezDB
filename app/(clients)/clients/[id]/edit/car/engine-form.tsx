'use client'

import { ClientsWithCar } from '@/@types/prisma'
import { updateClientCar } from '@/app/actions'
import { FormInput } from '@/shared/components/shared'
import {
  formEditClientCarSchema,
  TFormEditClientCarSchema,
} from '@/shared/components/shared/clients/schemas/edit-client-car-schemas'
import { Button, Select } from '@/shared/components/ui'
import {
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from '@/shared/components/ui/select'
import { Tabs, TabsContent, TabsTrigger } from '@/shared/components/ui/tabs'
import { zodResolver } from '@hookform/resolvers/zod'
import { TabsList } from '@radix-ui/react-tabs'
import { useState } from 'react'
import { Form, FormProvider, useForm } from 'react-hook-form'
import toast from 'react-hot-toast'

interface Props {
  client: ClientsWithCar
}

export function EngineForm({ client }: Props) {
  const [engineType, setEngineType] = useState('belt')

  const form = useForm<TFormEditClientCarSchema>({
    resolver: zodResolver(formEditClientCarSchema),
    defaultValues: {
      id: client.clientCar!.id,

      // –î–≤–∏–≥–∞—Ç–µ–ª—å –∏ –°–∏—Å—Ç–µ–º–∞ –≤—ã—Ö–ª–æ–ø–∞
      timingChainLong: client.clientCar?.timingChainLong ?? '',
      timingChainShort: client.clientCar?.timingChainShort ?? '',
      chainTensioner1: client.clientCar?.chainTensioner1 ?? '',
      chainTensioner2: client.clientCar?.chainTensioner2 ?? '',
      chainTensioner3: client.clientCar?.chainTensioner3 ?? '',
      chainKit: client.clientCar?.chainKit ?? '',

      timingBelt: client.clientCar?.timingBelt ?? '',
      timingBeltTensioner: client.clientCar?.timingBeltTensioner ?? '',
      timingBeltRoller: client.clientCar?.timingBeltRoller ?? '',

      pistons: client.clientCar?.pistons ?? '',
      pistonsRings: client.clientCar?.pistonsRings ?? '',
      hydrocompensators: client.clientCar?.hydrocompensators ?? '',
      valveIn: client.clientCar?.valveIn ?? '',
      valveEx: client.clientCar?.valveEx ?? '',
      valveGuidesIn: client.clientCar?.valveGuidesIn ?? '',
      valveGuidesEx: client.clientCar?.valveGuidesEx ?? '',
      bearingConnectingRod: client.clientCar?.bearingConnectingRod ?? '',
      bearingCamshaft: client.clientCar?.bearingCamshaft ?? '',
      crankshaftCamberRings: client.clientCar?.crankshaftCamberRings ?? '',

      generatorBelt: client.clientCar?.generatorBelt ?? '',
      powerSteeringBelt: client.clientCar?.powerSteeringBelt ?? '',
      airConditionerBelt: client.clientCar?.airConditionerBelt ?? '',
      tensionToller: client.clientCar?.tensionToller ?? '',
      bypassRoller1: client.clientCar?.bypassRoller1 ?? '',
      bypassRoller2: client.clientCar?.bypassRoller2 ?? '',
      generatorOverrunningClutch: client.clientCar?.generatorOverrunningClutch ?? '',

      engineGasketKit: client.clientCar?.engineGasketKit ?? '',
      headGasket: client.clientCar?.headGasket ?? '',
      valveCoverGasketLeft: client.clientCar?.valveCoverGasketLeft ?? '',
      valveCoverGasketRight: client.clientCar?.valveCoverGasketRight ?? '',
      valveCoverGasket: client.clientCar?.valveCoverGasket ?? '',
      intakeManifoldGasket: client.clientCar?.intakeManifoldGasket ?? '',
      exhaustManifoldGasket: client.clientCar?.exhaustManifoldGasket ?? '',
      exhaustPipeGasket1: client.clientCar?.exhaustPipeGasket1 ?? '',
      exhaustPipeGasket2: client.clientCar?.exhaustPipeGasket2 ?? '',
      exhaustPipeGasket3: client.clientCar?.exhaustPipeGasket3 ?? '',

      frontLeftEngineCushion: client.clientCar?.frontLeftEngineCushion ?? '',
      frontRightEngineCushion: client.clientCar?.frontRightEngineCushion ?? '',
      engineCushionLeft: client.clientCar?.engineCushionLeft ?? '',
      engineCushionRear: client.clientCar?.engineCushionRear ?? '',

      frontCrankshaftOilSeal: client.clientCar?.frontCrankshaftOilSeal ?? '',
      rearCrankshaftOilSeal: client.clientCar?.rearCrankshaftOilSeal ?? '',
      camshaftOilSeal: client.clientCar?.camshaftOilSeal ?? '',
      oilPumpPacking: client.clientCar?.oilPumpPacking ?? '',
      intakeOilCaps: client.clientCar?.intakeOilCaps ?? '',
      exhaustOilCaps: client.clientCar?.exhaustOilCaps ?? '',

      airDuctCorrugation: client.clientCar?.airDuctCorrugation ?? '',

      oilFilter: client.clientCar?.oilFilter ?? '',
      airFilter: client.clientCar?.airFilter ?? '',
      fuelFilter: client.clientCar?.fuelFilter ?? '',
      cabinFilter: client.clientCar?.cabinFilter ?? '',
    },
  })

  const onSubmit = async (data: TFormEditClientCarSchema) => {
    try {
      await updateClientCar(data)

      toast.success('–î–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã üöó', {
        icon: '‚úÖ',
      })

      //   router.push('/clients')
    } catch (error) {
      return toast.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–∞', {
        icon: '‚ùå',
      })
    }
  }

  const handleEngineTypeChange = (value: string) => {
    setEngineType(value)
  }

  return (
    <FormProvider {...form}>
      <form className='gap-5' onSubmit={form.handleSubmit(onSubmit)}>
        <Tabs defaultValue='account' className=''>
          <TabsList>
            <TabsTrigger value='grm'>–ì–†–ú</TabsTrigger>
            <TabsTrigger value='piston'>–î–≤–∏–≥–∞—Ç–µ–ª—å –∏ –ø–æ—Ä—à–Ω–µ–≤–∞—è</TabsTrigger>
          </TabsList>
          <TabsContent value='grm'>
            <div className='flex justify-end'>
              <Select value={engineType} onValueChange={handleEngineTypeChange}>
                <SelectTrigger className='w-[180px] mb-1 '>
                  <SelectValue placeholder='–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø' />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value='belt'>–†–µ–º–µ–Ω—å</SelectItem>
                  <SelectItem value='chain'>–¶–µ–ø—å</SelectItem>
                </SelectContent>
              </Select>
            </div>
            {engineType === 'belt' && (
              <div>
                <FormInput name='timingBelt' label='–†–µ–º–µ–Ω—å –ì–†–ú' />
                <FormInput name='timingBeltTensioner' label='–ù–∞—Ç—è–∂–∏—Ç–µ–ª—å —Ä–µ–º–Ω—è –ì–†–ú' />
                <FormInput name='timingBeltRoller' label='–ü–∞—Ä–∞–∑–∏—Ç–Ω—ã–π —Ä–æ–ª–∏–∫ —Ä–µ–º–Ω—è –ì–†–ú' />
              </div>
            )}

            {engineType === 'chain' && (
              <div>
                <FormInput name='timingChainLong' label='–¶–µ–ø—å –ì–†–ú' />
                <FormInput name='timingChainShort' label='–ö–æ—Ä–æ—Ç–∫–∞—è —Ü–µ–ø—å' />
                <FormInput name='chainTensioner1' label='–ì–∏–¥—Ä–æ–Ω–∞—Ç—è–∂–∏—Ç–µ–ª—å —Ü–µ–ø–∏ 1' />
                <FormInput name='chainTensioner2' label='–ì–∏–¥—Ä–æ–Ω–∞—Ç—è–∂–∏—Ç–µ–ª—å —Ü–µ–ø–∏ 2' />
                <FormInput name='chainTensioner3' label='–ë–∞—à–º–∞–∫' />
                <FormInput name='chainKit' label='–ù–∞–±–æ—Ä —Ü–µ–ø–µ–π' />
              </div>
            )}
          </TabsContent>
          <TabsContent value='piston'>
            <FormInput name='pistons' label='–ü–æ—Ä—à–Ω—è' />
            <FormInput name='pistonsRings' label='–ü–æ—Ä—à–Ω–µ–≤—ã–µ –∫–æ–ª—å—Ü–∞' />
            <FormInput name='hydrocompensators' label='–ì–∏–¥—Ä–æ–∫–æ–º–ø–µ–Ω—Å–∞—Ç–æ—Ä—ã' />
            <FormInput name='valveIn' label='–ö–ª–∞–ø–∞–Ω–∞ –≤–ø—É—Å–∫' />
            <FormInput name='valveEx' label='–ö–ª–∞–ø–∞–Ω–∞ –≤—ã–ø—É—Å–∫' />
            <FormInput name='valveGuidesIn' label='–ù–∞–ø—Ä–∞–≤–ª—è—é—â–∏–µ –∫–ª–∞–ø–∞–Ω–∞ –≤–ø—É—Å–∫' />
            <FormInput name='valveGuidesEx' label='–ù–∞–ø—Ä–∞–≤–ª—è—é—â–∏–µ –∫–ª–∞–ø–∞–Ω–∞ –≤—ã–ø—É—Å–∫' />
            <FormInput name='bearingConnectingRod' label='–í–∫–ª–∞–¥—ã—à –∫–æ—Ä–µ–Ω–Ω–æ–π' />
            <FormInput name='bearingCamshaft' label='–í–∫–ª–∞–¥—ã—à —à–∞—Ç—É–Ω–∞' />
            <FormInput name='crankshaftCamberRings' label='–ü–æ–ª—É–∫–æ–ª—å—Ü–∞ —Ä–∞–∑–±–µ–≥–∞ –∫–æ–ª–µ–Ω–≤–∞–ª–∞' />
          </TabsContent>
        </Tabs>

        <Button
          disabled={form.formState.isSubmitting}
          className='text-base mt-10 col-span-full'
          type='submit'
        >
          –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
        </Button>
      </form>
    </FormProvider>
  )
}
